name: Build and deploy the Minifier solution
on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  AZURE_FUNCTIONAPP_NAME_EU1: minifier-prod-weu-app
  AZURE_FUNCTIONAPP_BACKEND_NAME_EU1: minifierbackend-prod-weu-app
  AZURE_RESOURCEGROUP_NAME_EU1: minifier-prod-weu
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "."
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 6.x
  WORKING_DIRECTORY: src
  FRONTEND_PROJECT_FILE: "./src/Minifier.Frontend/Minifier.Frontend.csproj"
  BACKEND_PROJECT_FILE: "./src/Minifier.Backend/Minifier.Backend.csproj"
jobs:
  compile-functions-app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET Core ${{ env.DOTNET_CORE_VERSION }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

      - name: Dotnet restore
        run: dotnet restore "${{ env.WORKING_DIRECTORY }}"

      - name: Dotnet build
        run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore

      - name: Dotnet publish frontend
        run: dotnet publish "${{ env.FRONTEND_PROJECT_FILE }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/frontend"

      - name: Dotnet publish backend
        run: dotnet publish "${{ env.BACKEND_PROJECT_FILE }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/backend"

      - name: "Zip published frontend content"
        uses: vimtor/action-zip@v1
        with:
          files: ./frontend/
          recursive: true
          dest: frontend.zip

      - name: Publish frontend artifact
        uses: actions/upload-artifact@v2
        with:
          name: frontend-functions-artifact
          path: frontend.zip

      - name: "Zip published backend content"
        uses: vimtor/action-zip@v1
        with:
          files: ./backend/
          recursive: true
          dest: backend.zip

      - name: Publish backend artifact
        uses: actions/upload-artifact@v2
        with:
          name: backend-functions-artifact
          path: backend.zip

  publish-bicep:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Publish Artifact
        uses: actions/upload-artifact@v2
        with:
          name: bicep-templates
          path: deployment/infrastructure/

  infrastructure-incremental:
    needs: publish-bicep
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: bicep-templates
          path: ./infrastructure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_DEV }}

      - name: Deploy Infrastructure
        id: deployinfrastructure
        uses: Azure/cli@1.0.4
        with:
          inlineScript: az deployment sub create --location WestEurope --template-file ./infrastructure/main.bicep --parameters ./infrastructure/parameters.json --parameters frontendPackageReferenceLocation='https://jan-v.nl/frontend.zip' backendPackageReferenceLocation='https://jan-v.nl/backend.zip'

  deploy-functions:
    needs: [compile-functions-app, infrastructure-incremental]
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_DEV }}
      - name: Download backend artifact
        uses: actions/download-artifact@v2
        with:
          name: backend-functions-artifact
      - name: "Deploy backend web app - EU1"
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_BACKEND_NAME_EU1 }}
          package: "backend.zip"

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: frontend-functions-artifact
      - name: "Deploy frontend web app - EU1"
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME_EU1 }}
          package: "frontend.zip"
